"use strict";(self.webpackChunkgovernify_docs=self.webpackChunkgovernify_docs||[]).push([[830],{3905:(e,t,n)=>{n.d(t,{Zo:()=>s,kt:()=>u});var r=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function a(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var c=r.createContext({}),p=function(e){var t=r.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},s=function(e){var t=p(e.components);return r.createElement(c.Provider,{value:t},e.children)},m="mdxType",g={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,i=e.originalType,c=e.parentName,s=a(e,["components","mdxType","originalType","parentName"]),m=p(n),d=o,u=m["".concat(c,".").concat(d)]||m[d]||g[d]||i;return n?r.createElement(u,l(l({ref:t},s),{},{components:n})):r.createElement(u,l({ref:t},s))}));function u(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var i=n.length,l=new Array(i);l[0]=d;var a={};for(var c in t)hasOwnProperty.call(t,c)&&(a[c]=t[c]);a.originalType=e,a[m]="string"==typeof e?e:o,l[1]=a;for(var p=2;p<i;p++)l[p]=n[p];return r.createElement.apply(null,l)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},215:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>l,default:()=>g,frontMatter:()=>i,metadata:()=>a,toc:()=>p});var r=n(7462),o=(n(7294),n(3905));const i={title:"Logging Levels",description:"Logging Levels",hide_table_of_contents:!1},l=void 0,a={unversionedId:"development/tooling/commons-library copy",id:"development/tooling/commons-library copy",title:"Logging Levels",description:"Logging Levels",source:"@site/docs/development/tooling/commons-library copy.md",sourceDirName:"development/tooling",slug:"/development/tooling/commons-library copy",permalink:"/development/tooling/commons-library copy",draft:!1,editUrl:"https://github.com/governify/governify-docs/edit/main/docs/development/tooling/commons-library copy.md",tags:[],version:"current",lastUpdatedBy:"Manuel Otero Barbas\xe1n",lastUpdatedAt:1718270629,formattedLastUpdatedAt:"Jun 13, 2024",frontMatter:{title:"Logging Levels",description:"Logging Levels",hide_table_of_contents:!1},sidebar:"defaultSidebar",previous:{title:"ZH2GH",permalink:"/development/services/zh2gh"},next:{title:"Governify Commons Library",permalink:"/development/tooling/commons-library"}},c={},p=[{value:"Types of Logging Levels",id:"types-of-logging-levels",level:3},{value:"Environment Variable",id:"environment-variable",level:2},{value:"Admin Panel",id:"admin-panel",level:2}],s={toc:p},m="wrapper";function g(e){let{components:t,...n}=e;return(0,o.kt)(m,(0,r.Z)({},s,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"This section explains how to modify logging levels for better debugging and monitoring of the infrastructure."),(0,o.kt)("p",null,"Logging levels can be adjusted in two ways: by setting the environment variable ",(0,o.kt)("inlineCode",{parentName:"p"},"GOVERNIFY_LOG_LEVEL")," before running the microservice or through the admin panel of the render interface."),(0,o.kt)("h3",{id:"types-of-logging-levels"},"Types of Logging Levels"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"DEBUG")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"INFO")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"WARN")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"ERROR")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"FATAL"))),(0,o.kt)("h2",{id:"environment-variable"},"Environment Variable"),(0,o.kt)("p",null,"To launch a microservice with a logging level set for a single execution, use the following command:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"export GOV_LOG_LEVEL=debug && npm start\n")),(0,o.kt)("h2",{id:"admin-panel"},"Admin Panel"),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},"Access the render frontend at ",(0,o.kt)("inlineCode",{parentName:"li"},"http://localhost:5100")," or ",(0,o.kt)("inlineCode",{parentName:"li"},"ui.buejay.[org_domain]"),"."),(0,o.kt)("li",{parentName:"ol"},"Click on ",(0,o.kt)("inlineCode",{parentName:"li"},"Admin UI")," in the top right corner."),(0,o.kt)("li",{parentName:"ol"},"Navigate to the ",(0,o.kt)("inlineCode",{parentName:"li"},"Commons")," section."),(0,o.kt)("li",{parentName:"ol"},"For each microservice, click the edit button and change the desired logging level.")))}g.isMDXComponent=!0}}]);